class Solution {
public:

    bool find(vector<int>&arr, int mid, int m, int k){
        int count=0;
        long long bokey=0;
        for(int i=0; i<arr.size(); i++){
            if(arr[i]<=mid) count++;
            else{
                bokey+=count/k;
                count=0;
            }
        }

        bokey+=count/k;
        if(bokey>=m) return true;
        return false;
    }


    int minDays(vector<int>&arr, int m, int k) {
        int ans=-1;
        if(arr.size()<(long long)m*k) return -1;
        int start=*min_element(arr.begin(),arr.end());
        int end=*max_element(arr.begin(),arr.end());
        while(start<=end){
            int mid=start+(end-start)/2;
            bool flag=find(arr,mid,m,k);
            if(flag){
                ans=mid;
                end=mid-1;
            }
            else{
                start=mid+1;
            }
        }
        return ans;
    }
};
