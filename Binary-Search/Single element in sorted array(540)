class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int N=nums.size();
        if(N==1){
            return nums[0];
        }
        if(nums[0]!=nums[1]) return nums[0];
        if(nums[N-1]!=nums[N-2]) return nums[N-1];
        int start=1;
        int ans=0;
        int end=N-2;
        while(start<=end){
            int mid=start+(end-start)/2;
            if((nums[mid]!=nums[mid-1]) && (nums[mid]!=nums[mid+1])){
                return nums[mid];
            }
            else if((mid%2==0 && nums[mid]==nums[mid+1]) || (mid%2!=0 && nums[mid]==nums[mid-1])){
                start=mid+1;

            }
            else{
                end=mid-1;
            }
        }
        return -1;
    }
};
