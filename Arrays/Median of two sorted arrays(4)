class Solution {
public:
    double findMedianSortedArrays(vector<int>& nums1, vector<int>& nums2) {
        int n1=nums1.size();
        int n2=nums2.size();
        int i=0;
        int j=0;
        int n=n1+n2;
        int idx2=n/2;
        int idx1=idx2-1;
        int count=0;
        int ele1=-1;
        int ele2=-1;

        while(i<n1 && j<n2){
            if(nums1[i]<nums2[j]){
                if(count==idx1) ele1=nums1[i];
                if(count==idx2) ele2=nums1[i];
                count++;
                i++;
            }
            else{
                if(count==idx1) ele1=nums2[j];
                if(count==idx2) ele2=nums2[j];
                count++;
                j++;
            }
        }

        while(i<n1){
            if(count==idx1) ele1=nums1[i];
            if(count==idx2) ele2=nums1[i];
            count++;
            i++;
        }

        while(j<n2){
            if(count==idx1) ele1=nums2[j];
            if(count==idx2) ele2=nums2[j];
            count++;
            j++;
        }

        if(n%2==1) return ele2;
        else{
            return (ele1+ele2)/2.0;
        }

        return -1;
    }
};
