class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        int ans=0;
        if(root==nullptr) return 0;
        queue<pair<TreeNode*,int>>q;
        q.push({root,0});
        while(!q.empty()){
            int size=q.size();
            long long min=q.front().second;
            long long first,last;
            for(int i=0; i<size; i++){
                TreeNode* node=q.front().first;
                long long idx=q.front().second-min;
                q.pop();
                if(i==0) first=idx;
                if(i==size-1) last=idx;
                if(node->left){
                    q.push({node->left,idx*2+1});
                }
                if(node->right){
                    q.push({node->right,idx*2+2});
                }
            }
            ans=max(ans,int(last-first+1));
        }
        return ans;
    }
};
